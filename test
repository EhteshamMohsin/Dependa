 #!/bin/bash

    ORG_NAME="Somatus-inc"

    OUTPUT_CSV="dependabot_alerts.csv"
    if ! command -v jq &> /dev/null   # Check if jq is installed
    then
        echo "jq could not be found, please install jq to continue."
        exit 1
    fi

    echo "number,CVE_ID,url,repo_name" > "$OUTPUT_CSV"
    fetch_data() {
      local url=$1
      curl -s -H "Authorization: token $(TOKEN)" -H "Accept: application/vnd.github+json" "$url"
    }

    fetch_all_repos() {
      local page=1
      local per_page=100
      local repos=()

      while :; do
        response=$(fetch_data "https://api.github.com/orgs/${ORG_NAME}/repos?per_page=${per_page}&page=${page}")
        repo_names=$(echo "$response" | jq -r '.[].name')
        
        if [[ -z "$repo_names" ]]; then
          break
        fi
        
        repos+=($repo_names)
        ((page++))
      done

      echo "${repos[@]}"
    }

    REPOS=$(fetch_all_repos)

    for REPO in $REPOS; do
      ALERTS=$(fetch_data "https://api.github.com/repos/${ORG_NAME}/${REPO}/dependabot/alerts")
      
      # Check if there are alerts
      if [[ $(echo "$ALERTS" | jq '. | length') -gt 0 ]]; then
        echo "$ALERTS" | jq -r --arg repo "$REPO" '.[] | [
            .number,
            (.security_advisory.identifiers[] | select(.type == "CVE") | .value),
            .html_url,
            $repo
        ] | @csv' >> "$OUTPUT_CSV"
      fi
    done

    echo "Dependabot alerts have been written to $OUTPUT_CSV"
